# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: openxc.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0copenxc.proto\x12\x06openxc\"\xa7\x03\n\x0eVehicleMessage\x12)\n\x04type\x18\x01 \x01(\x0e\x32\x1b.openxc.VehicleMessage.Type\x12\'\n\x0b\x63\x61n_message\x18\x02 \x01(\x0b\x32\x12.openxc.CanMessage\x12-\n\x0esimple_message\x18\x03 \x01(\x0b\x32\x15.openxc.SimpleMessage\x12\x37\n\x13\x64iagnostic_response\x18\x04 \x01(\x0b\x32\x1a.openxc.DiagnosticResponse\x12/\n\x0f\x63ontrol_command\x18\x05 \x01(\x0b\x32\x16.openxc.ControlCommand\x12\x31\n\x10\x63ommand_response\x18\x06 \x01(\x0b\x32\x17.openxc.CommandResponse\x12\x11\n\ttimestamp\x18\x07 \x01(\x04\"b\n\x04Type\x12\n\n\x06UNUSED\x10\x00\x12\x07\n\x03\x43\x41N\x10\x01\x12\n\n\x06SIMPLE\x10\x02\x12\x0e\n\nDIAGNOSTIC\x10\x03\x12\x13\n\x0f\x43ONTROL_COMMAND\x10\x04\x12\x14\n\x10\x43OMMAND_RESPONSE\x10\x05\"\xa0\x01\n\nCanMessage\x12\x0b\n\x03\x62us\x18\x01 \x01(\x05\x12\n\n\x02id\x18\x02 \x01(\r\x12\x0c\n\x04\x64\x61ta\x18\x03 \x01(\x0c\x12\x34\n\x0c\x66rame_format\x18\x04 \x01(\x0e\x32\x1e.openxc.CanMessage.FrameFormat\"5\n\x0b\x46rameFormat\x12\n\n\x06UNUSED\x10\x00\x12\x0c\n\x08STANDARD\x10\x01\x12\x0c\n\x08\x45XTENDED\x10\x02\"\xb0\x06\n\x0e\x43ontrolCommand\x12)\n\x04type\x18\x01 \x01(\x0e\x32\x1b.openxc.ControlCommand.Type\x12<\n\x12\x64iagnostic_request\x18\x02 \x01(\x0b\x32 .openxc.DiagnosticControlCommand\x12G\n\x18passthrough_mode_request\x18\x03 \x01(\x0b\x32%.openxc.PassthroughModeControlCommand\x12O\n acceptance_filter_bypass_command\x18\x04 \x01(\x0b\x32%.openxc.AcceptanceFilterBypassCommand\x12<\n\x16payload_format_command\x18\x05 \x01(\x0b\x32\x1c.openxc.PayloadFormatCommand\x12O\n predefined_obd2_requests_command\x18\x06 \x01(\x0b\x32%.openxc.PredefinedObd2RequestsCommand\x12\x46\n\x1bmodem_configuration_command\x18\x07 \x01(\x0b\x32!.openxc.ModemConfigurationCommand\x12\x42\n\x19rtc_configuration_command\x18\x08 \x01(\x0b\x32\x1f.openxc.RTCConfigurationCommand\"\xff\x01\n\x04Type\x12\n\n\x06UNUSED\x10\x00\x12\x0b\n\x07VERSION\x10\x01\x12\r\n\tDEVICE_ID\x10\x02\x12\x0e\n\nDIAGNOSTIC\x10\x03\x12\x0f\n\x0bPASSTHROUGH\x10\x04\x12\x1c\n\x18\x41\x43\x43\x45PTANCE_FILTER_BYPASS\x10\x05\x12\x12\n\x0ePAYLOAD_FORMAT\x10\x06\x12\x1c\n\x18PREDEFINED_OBD2_REQUESTS\x10\x07\x12\x17\n\x13MODEM_CONFIGURATION\x10\x08\x12\x15\n\x11RTC_CONFIGURATION\x10\t\x12\x13\n\x0fSD_MOUNT_STATUS\x10\n\x12\x0c\n\x08PLATFORM\x10\x0b\x12\x0b\n\x07GET_VIN\x10\x0c\"\xaa\x01\n\x18\x44iagnosticControlCommand\x12*\n\x07request\x18\x01 \x01(\x0b\x32\x19.openxc.DiagnosticRequest\x12\x37\n\x06\x61\x63tion\x18\x02 \x01(\x0e\x32\'.openxc.DiagnosticControlCommand.Action\")\n\x06\x41\x63tion\x12\n\n\x06UNUSED\x10\x00\x12\x07\n\x03\x41\x44\x44\x10\x01\x12\n\n\x06\x43\x41NCEL\x10\x02\"=\n\x1dPassthroughModeControlCommand\x12\x0b\n\x03\x62us\x18\x01 \x01(\x05\x12\x0f\n\x07\x65nabled\x18\x02 \x01(\x08\"<\n\x1d\x41\x63\x63\x65ptanceFilterBypassCommand\x12\x0b\n\x03\x62us\x18\x01 \x01(\x05\x12\x0e\n\x06\x62ypass\x18\x02 \x01(\x08\"\x87\x01\n\x14PayloadFormatCommand\x12:\n\x06\x66ormat\x18\x01 \x01(\x0e\x32*.openxc.PayloadFormatCommand.PayloadFormat\"3\n\rPayloadFormat\x12\n\n\x06UNUSED\x10\x00\x12\x08\n\x04JSON\x10\x01\x12\x0c\n\x08PROTOBUF\x10\x02\"0\n\x1dPredefinedObd2RequestsCommand\x12\x0f\n\x07\x65nabled\x18\x01 \x01(\x08\"\xd1\x03\n\x17NetworkOperatorSettings\x12\x18\n\x10\x61llowDataRoaming\x18\x01 \x01(\x08\x12N\n\x12operatorSelectMode\x18\x02 \x01(\x0e\x32\x32.openxc.NetworkOperatorSettings.OperatorSelectMode\x12L\n\x11networkDescriptor\x18\x03 \x01(\x0b\x32\x31.openxc.NetworkOperatorSettings.NetworkDescriptor\x1a\x98\x01\n\x11NetworkDescriptor\x12\x0c\n\x04PLMN\x18\x01 \x01(\r\x12R\n\x0bnetworkType\x18\x02 \x01(\x0e\x32=.openxc.NetworkOperatorSettings.NetworkDescriptor.NetworkType\"!\n\x0bNetworkType\x12\x07\n\x03GSM\x10\x00\x12\t\n\x05UTRAN\x10\x02\"c\n\x12OperatorSelectMode\x12\r\n\tAUTOMATIC\x10\x00\x12\n\n\x06MANUAL\x10\x01\x12\x0e\n\nDEREGISTER\x10\x02\x12\x0c\n\x08SET_ONLY\x10\x03\x12\x14\n\x10MANUAL_AUTOMATIC\x10\x04\"\"\n\x13NetworkDataSettings\x12\x0b\n\x03\x61pn\x18\x01 \x01(\t\"3\n\x15ServerConnectSettings\x12\x0c\n\x04host\x18\x01 \x01(\t\x12\x0c\n\x04port\x18\x02 \x01(\r\"\xd5\x01\n\x19ModemConfigurationCommand\x12@\n\x17networkOperatorSettings\x18\x01 \x01(\x0b\x32\x1f.openxc.NetworkOperatorSettings\x12\x38\n\x13networkDataSettings\x18\x02 \x01(\x0b\x32\x1b.openxc.NetworkDataSettings\x12<\n\x15serverConnectSettings\x18\x03 \x01(\x0b\x32\x1d.openxc.ServerConnectSettings\",\n\x17RTCConfigurationCommand\x12\x11\n\tunix_time\x18\x01 \x01(\r\"]\n\x0f\x43ommandResponse\x12)\n\x04type\x18\x01 \x01(\x0e\x32\x1b.openxc.ControlCommand.Type\x12\x0f\n\x07message\x18\x02 \x01(\t\x12\x0e\n\x06status\x18\x03 \x01(\x08\"\x89\x02\n\x11\x44iagnosticRequest\x12\x0b\n\x03\x62us\x18\x01 \x01(\x05\x12\x12\n\nmessage_id\x18\x02 \x01(\r\x12\x0c\n\x04mode\x18\x03 \x01(\r\x12\x0b\n\x03pid\x18\x04 \x01(\r\x12\x0f\n\x07payload\x18\x05 \x01(\x0c\x12\x1a\n\x12multiple_responses\x18\x06 \x01(\x08\x12\x11\n\tfrequency\x18\x07 \x01(\x01\x12\x0c\n\x04name\x18\x08 \x01(\t\x12;\n\x0c\x64\x65\x63oded_type\x18\t \x01(\x0e\x32%.openxc.DiagnosticRequest.DecodedType\"-\n\x0b\x44\x65\x63odedType\x12\n\n\x06UNUSED\x10\x00\x12\x08\n\x04NONE\x10\x01\x12\x08\n\x04OBD2\x10\x02\"\xda\x01\n\x12\x44iagnosticResponse\x12\x0b\n\x03\x62us\x18\x01 \x01(\x05\x12\x12\n\nmessage_id\x18\x02 \x01(\r\x12\x0c\n\x04mode\x18\x03 \x01(\r\x12\x0b\n\x03pid\x18\x04 \x01(\r\x12\x0f\n\x07success\x18\x05 \x01(\x08\x12\x1e\n\x16negative_response_code\x18\x06 \x01(\r\x12\x0f\n\x07payload\x18\x07 \x01(\x0c\x12#\n\x05value\x18\x08 \x01(\x0b\x32\x14.openxc.DynamicField\x12\r\n\x05\x66rame\x18\t \x01(\x05\x12\x12\n\ntotal_size\x18\n \x01(\r\"\xae\x01\n\x0c\x44ynamicField\x12\'\n\x04type\x18\x01 \x01(\x0e\x32\x19.openxc.DynamicField.Type\x12\x14\n\x0cstring_value\x18\x02 \x01(\t\x12\x15\n\rnumeric_value\x18\x03 \x01(\x01\x12\x15\n\rboolean_value\x18\x04 \x01(\x08\"1\n\x04Type\x12\n\n\x06UNUSED\x10\x00\x12\n\n\x06STRING\x10\x01\x12\x07\n\x03NUM\x10\x02\x12\x08\n\x04\x42OOL\x10\x03\"g\n\rSimpleMessage\x12\x0c\n\x04name\x18\x01 \x01(\t\x12#\n\x05value\x18\x02 \x01(\x0b\x32\x14.openxc.DynamicField\x12#\n\x05\x65vent\x18\x03 \x01(\x0b\x32\x14.openxc.DynamicFieldB\x1c\n\ncom.openxcB\x0e\x42inaryMessagesb\x06proto3')



_VEHICLEMESSAGE = DESCRIPTOR.message_types_by_name['VehicleMessage']
_CANMESSAGE = DESCRIPTOR.message_types_by_name['CanMessage']
_CONTROLCOMMAND = DESCRIPTOR.message_types_by_name['ControlCommand']
_DIAGNOSTICCONTROLCOMMAND = DESCRIPTOR.message_types_by_name['DiagnosticControlCommand']
_PASSTHROUGHMODECONTROLCOMMAND = DESCRIPTOR.message_types_by_name['PassthroughModeControlCommand']
_ACCEPTANCEFILTERBYPASSCOMMAND = DESCRIPTOR.message_types_by_name['AcceptanceFilterBypassCommand']
_PAYLOADFORMATCOMMAND = DESCRIPTOR.message_types_by_name['PayloadFormatCommand']
_PREDEFINEDOBD2REQUESTSCOMMAND = DESCRIPTOR.message_types_by_name['PredefinedObd2RequestsCommand']
_NETWORKOPERATORSETTINGS = DESCRIPTOR.message_types_by_name['NetworkOperatorSettings']
_NETWORKOPERATORSETTINGS_NETWORKDESCRIPTOR = _NETWORKOPERATORSETTINGS.nested_types_by_name['NetworkDescriptor']
_NETWORKDATASETTINGS = DESCRIPTOR.message_types_by_name['NetworkDataSettings']
_SERVERCONNECTSETTINGS = DESCRIPTOR.message_types_by_name['ServerConnectSettings']
_MODEMCONFIGURATIONCOMMAND = DESCRIPTOR.message_types_by_name['ModemConfigurationCommand']
_RTCCONFIGURATIONCOMMAND = DESCRIPTOR.message_types_by_name['RTCConfigurationCommand']
_COMMANDRESPONSE = DESCRIPTOR.message_types_by_name['CommandResponse']
_DIAGNOSTICREQUEST = DESCRIPTOR.message_types_by_name['DiagnosticRequest']
_DIAGNOSTICRESPONSE = DESCRIPTOR.message_types_by_name['DiagnosticResponse']
_DYNAMICFIELD = DESCRIPTOR.message_types_by_name['DynamicField']
_SIMPLEMESSAGE = DESCRIPTOR.message_types_by_name['SimpleMessage']
_VEHICLEMESSAGE_TYPE = _VEHICLEMESSAGE.enum_types_by_name['Type']
_CANMESSAGE_FRAMEFORMAT = _CANMESSAGE.enum_types_by_name['FrameFormat']
_CONTROLCOMMAND_TYPE = _CONTROLCOMMAND.enum_types_by_name['Type']
_DIAGNOSTICCONTROLCOMMAND_ACTION = _DIAGNOSTICCONTROLCOMMAND.enum_types_by_name['Action']
_PAYLOADFORMATCOMMAND_PAYLOADFORMAT = _PAYLOADFORMATCOMMAND.enum_types_by_name['PayloadFormat']
_NETWORKOPERATORSETTINGS_NETWORKDESCRIPTOR_NETWORKTYPE = _NETWORKOPERATORSETTINGS_NETWORKDESCRIPTOR.enum_types_by_name['NetworkType']
_NETWORKOPERATORSETTINGS_OPERATORSELECTMODE = _NETWORKOPERATORSETTINGS.enum_types_by_name['OperatorSelectMode']
_DIAGNOSTICREQUEST_DECODEDTYPE = _DIAGNOSTICREQUEST.enum_types_by_name['DecodedType']
_DYNAMICFIELD_TYPE = _DYNAMICFIELD.enum_types_by_name['Type']
VehicleMessage = _reflection.GeneratedProtocolMessageType('VehicleMessage', (_message.Message,), {
  'DESCRIPTOR' : _VEHICLEMESSAGE,
  '__module__' : 'openxc_pb2'
  # @@protoc_insertion_point(class_scope:openxc.VehicleMessage)
  })
_sym_db.RegisterMessage(VehicleMessage)

CanMessage = _reflection.GeneratedProtocolMessageType('CanMessage', (_message.Message,), {
  'DESCRIPTOR' : _CANMESSAGE,
  '__module__' : 'openxc_pb2'
  # @@protoc_insertion_point(class_scope:openxc.CanMessage)
  })
_sym_db.RegisterMessage(CanMessage)

ControlCommand = _reflection.GeneratedProtocolMessageType('ControlCommand', (_message.Message,), {
  'DESCRIPTOR' : _CONTROLCOMMAND,
  '__module__' : 'openxc_pb2'
  # @@protoc_insertion_point(class_scope:openxc.ControlCommand)
  })
_sym_db.RegisterMessage(ControlCommand)

DiagnosticControlCommand = _reflection.GeneratedProtocolMessageType('DiagnosticControlCommand', (_message.Message,), {
  'DESCRIPTOR' : _DIAGNOSTICCONTROLCOMMAND,
  '__module__' : 'openxc_pb2'
  # @@protoc_insertion_point(class_scope:openxc.DiagnosticControlCommand)
  })
_sym_db.RegisterMessage(DiagnosticControlCommand)

PassthroughModeControlCommand = _reflection.GeneratedProtocolMessageType('PassthroughModeControlCommand', (_message.Message,), {
  'DESCRIPTOR' : _PASSTHROUGHMODECONTROLCOMMAND,
  '__module__' : 'openxc_pb2'
  # @@protoc_insertion_point(class_scope:openxc.PassthroughModeControlCommand)
  })
_sym_db.RegisterMessage(PassthroughModeControlCommand)

AcceptanceFilterBypassCommand = _reflection.GeneratedProtocolMessageType('AcceptanceFilterBypassCommand', (_message.Message,), {
  'DESCRIPTOR' : _ACCEPTANCEFILTERBYPASSCOMMAND,
  '__module__' : 'openxc_pb2'
  # @@protoc_insertion_point(class_scope:openxc.AcceptanceFilterBypassCommand)
  })
_sym_db.RegisterMessage(AcceptanceFilterBypassCommand)

PayloadFormatCommand = _reflection.GeneratedProtocolMessageType('PayloadFormatCommand', (_message.Message,), {
  'DESCRIPTOR' : _PAYLOADFORMATCOMMAND,
  '__module__' : 'openxc_pb2'
  # @@protoc_insertion_point(class_scope:openxc.PayloadFormatCommand)
  })
_sym_db.RegisterMessage(PayloadFormatCommand)

PredefinedObd2RequestsCommand = _reflection.GeneratedProtocolMessageType('PredefinedObd2RequestsCommand', (_message.Message,), {
  'DESCRIPTOR' : _PREDEFINEDOBD2REQUESTSCOMMAND,
  '__module__' : 'openxc_pb2'
  # @@protoc_insertion_point(class_scope:openxc.PredefinedObd2RequestsCommand)
  })
_sym_db.RegisterMessage(PredefinedObd2RequestsCommand)

NetworkOperatorSettings = _reflection.GeneratedProtocolMessageType('NetworkOperatorSettings', (_message.Message,), {

  'NetworkDescriptor' : _reflection.GeneratedProtocolMessageType('NetworkDescriptor', (_message.Message,), {
    'DESCRIPTOR' : _NETWORKOPERATORSETTINGS_NETWORKDESCRIPTOR,
    '__module__' : 'openxc_pb2'
    # @@protoc_insertion_point(class_scope:openxc.NetworkOperatorSettings.NetworkDescriptor)
    })
  ,
  'DESCRIPTOR' : _NETWORKOPERATORSETTINGS,
  '__module__' : 'openxc_pb2'
  # @@protoc_insertion_point(class_scope:openxc.NetworkOperatorSettings)
  })
_sym_db.RegisterMessage(NetworkOperatorSettings)
_sym_db.RegisterMessage(NetworkOperatorSettings.NetworkDescriptor)

NetworkDataSettings = _reflection.GeneratedProtocolMessageType('NetworkDataSettings', (_message.Message,), {
  'DESCRIPTOR' : _NETWORKDATASETTINGS,
  '__module__' : 'openxc_pb2'
  # @@protoc_insertion_point(class_scope:openxc.NetworkDataSettings)
  })
_sym_db.RegisterMessage(NetworkDataSettings)

ServerConnectSettings = _reflection.GeneratedProtocolMessageType('ServerConnectSettings', (_message.Message,), {
  'DESCRIPTOR' : _SERVERCONNECTSETTINGS,
  '__module__' : 'openxc_pb2'
  # @@protoc_insertion_point(class_scope:openxc.ServerConnectSettings)
  })
_sym_db.RegisterMessage(ServerConnectSettings)

ModemConfigurationCommand = _reflection.GeneratedProtocolMessageType('ModemConfigurationCommand', (_message.Message,), {
  'DESCRIPTOR' : _MODEMCONFIGURATIONCOMMAND,
  '__module__' : 'openxc_pb2'
  # @@protoc_insertion_point(class_scope:openxc.ModemConfigurationCommand)
  })
_sym_db.RegisterMessage(ModemConfigurationCommand)

RTCConfigurationCommand = _reflection.GeneratedProtocolMessageType('RTCConfigurationCommand', (_message.Message,), {
  'DESCRIPTOR' : _RTCCONFIGURATIONCOMMAND,
  '__module__' : 'openxc_pb2'
  # @@protoc_insertion_point(class_scope:openxc.RTCConfigurationCommand)
  })
_sym_db.RegisterMessage(RTCConfigurationCommand)

CommandResponse = _reflection.GeneratedProtocolMessageType('CommandResponse', (_message.Message,), {
  'DESCRIPTOR' : _COMMANDRESPONSE,
  '__module__' : 'openxc_pb2'
  # @@protoc_insertion_point(class_scope:openxc.CommandResponse)
  })
_sym_db.RegisterMessage(CommandResponse)

DiagnosticRequest = _reflection.GeneratedProtocolMessageType('DiagnosticRequest', (_message.Message,), {
  'DESCRIPTOR' : _DIAGNOSTICREQUEST,
  '__module__' : 'openxc_pb2'
  # @@protoc_insertion_point(class_scope:openxc.DiagnosticRequest)
  })
_sym_db.RegisterMessage(DiagnosticRequest)

DiagnosticResponse = _reflection.GeneratedProtocolMessageType('DiagnosticResponse', (_message.Message,), {
  'DESCRIPTOR' : _DIAGNOSTICRESPONSE,
  '__module__' : 'openxc_pb2'
  # @@protoc_insertion_point(class_scope:openxc.DiagnosticResponse)
  })
_sym_db.RegisterMessage(DiagnosticResponse)

DynamicField = _reflection.GeneratedProtocolMessageType('DynamicField', (_message.Message,), {
  'DESCRIPTOR' : _DYNAMICFIELD,
  '__module__' : 'openxc_pb2'
  # @@protoc_insertion_point(class_scope:openxc.DynamicField)
  })
_sym_db.RegisterMessage(DynamicField)

SimpleMessage = _reflection.GeneratedProtocolMessageType('SimpleMessage', (_message.Message,), {
  'DESCRIPTOR' : _SIMPLEMESSAGE,
  '__module__' : 'openxc_pb2'
  # @@protoc_insertion_point(class_scope:openxc.SimpleMessage)
  })
_sym_db.RegisterMessage(SimpleMessage)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'\n\ncom.openxcB\016BinaryMessages'
  _VEHICLEMESSAGE._serialized_start=25
  _VEHICLEMESSAGE._serialized_end=448
  _VEHICLEMESSAGE_TYPE._serialized_start=350
  _VEHICLEMESSAGE_TYPE._serialized_end=448
  _CANMESSAGE._serialized_start=451
  _CANMESSAGE._serialized_end=611
  _CANMESSAGE_FRAMEFORMAT._serialized_start=558
  _CANMESSAGE_FRAMEFORMAT._serialized_end=611
  _CONTROLCOMMAND._serialized_start=614
  _CONTROLCOMMAND._serialized_end=1430
  _CONTROLCOMMAND_TYPE._serialized_start=1175
  _CONTROLCOMMAND_TYPE._serialized_end=1430
  _DIAGNOSTICCONTROLCOMMAND._serialized_start=1433
  _DIAGNOSTICCONTROLCOMMAND._serialized_end=1603
  _DIAGNOSTICCONTROLCOMMAND_ACTION._serialized_start=1562
  _DIAGNOSTICCONTROLCOMMAND_ACTION._serialized_end=1603
  _PASSTHROUGHMODECONTROLCOMMAND._serialized_start=1605
  _PASSTHROUGHMODECONTROLCOMMAND._serialized_end=1666
  _ACCEPTANCEFILTERBYPASSCOMMAND._serialized_start=1668
  _ACCEPTANCEFILTERBYPASSCOMMAND._serialized_end=1728
  _PAYLOADFORMATCOMMAND._serialized_start=1731
  _PAYLOADFORMATCOMMAND._serialized_end=1866
  _PAYLOADFORMATCOMMAND_PAYLOADFORMAT._serialized_start=1815
  _PAYLOADFORMATCOMMAND_PAYLOADFORMAT._serialized_end=1866
  _PREDEFINEDOBD2REQUESTSCOMMAND._serialized_start=1868
  _PREDEFINEDOBD2REQUESTSCOMMAND._serialized_end=1916
  _NETWORKOPERATORSETTINGS._serialized_start=1919
  _NETWORKOPERATORSETTINGS._serialized_end=2384
  _NETWORKOPERATORSETTINGS_NETWORKDESCRIPTOR._serialized_start=2131
  _NETWORKOPERATORSETTINGS_NETWORKDESCRIPTOR._serialized_end=2283
  _NETWORKOPERATORSETTINGS_NETWORKDESCRIPTOR_NETWORKTYPE._serialized_start=2250
  _NETWORKOPERATORSETTINGS_NETWORKDESCRIPTOR_NETWORKTYPE._serialized_end=2283
  _NETWORKOPERATORSETTINGS_OPERATORSELECTMODE._serialized_start=2285
  _NETWORKOPERATORSETTINGS_OPERATORSELECTMODE._serialized_end=2384
  _NETWORKDATASETTINGS._serialized_start=2386
  _NETWORKDATASETTINGS._serialized_end=2420
  _SERVERCONNECTSETTINGS._serialized_start=2422
  _SERVERCONNECTSETTINGS._serialized_end=2473
  _MODEMCONFIGURATIONCOMMAND._serialized_start=2476
  _MODEMCONFIGURATIONCOMMAND._serialized_end=2689
  _RTCCONFIGURATIONCOMMAND._serialized_start=2691
  _RTCCONFIGURATIONCOMMAND._serialized_end=2735
  _COMMANDRESPONSE._serialized_start=2737
  _COMMANDRESPONSE._serialized_end=2830
  _DIAGNOSTICREQUEST._serialized_start=2833
  _DIAGNOSTICREQUEST._serialized_end=3098
  _DIAGNOSTICREQUEST_DECODEDTYPE._serialized_start=3053
  _DIAGNOSTICREQUEST_DECODEDTYPE._serialized_end=3098
  _DIAGNOSTICRESPONSE._serialized_start=3101
  _DIAGNOSTICRESPONSE._serialized_end=3319
  _DYNAMICFIELD._serialized_start=3322
  _DYNAMICFIELD._serialized_end=3496
  _DYNAMICFIELD_TYPE._serialized_start=3447
  _DYNAMICFIELD_TYPE._serialized_end=3496
  _SIMPLEMESSAGE._serialized_start=3498
  _SIMPLEMESSAGE._serialized_end=3601
# @@protoc_insertion_point(module_scope)
